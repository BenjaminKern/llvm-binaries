name: CI

on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  # push:
  #   branches: [ "main" ]
  # pull_request:
  #   branches: [ "main" ]
  push:
    tags:
      - "v*.*.*"
  workflow_dispatch:

jobs:
  all:
    if: always()
    name: all-jobs
    runs-on: ubuntu-latest
    needs:
      - container_build
      - build
      - release
    steps:
      - run: jq --exit-status 'all(.result == "success")' <<< '${{ toJson(needs) }}'

  release:
    runs-on: ubuntu-latest
    needs:
      - container_build
      - build
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - name: Fetch artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: artifact-*
          merge-multiple: true
      - name: Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/v')
        with:
          files: |
            *.zip
            *.tar.gz
          draft: true
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  container_build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        job:
          - { suffix: x86_64-linux , os: ubuntu, variant: 20.04 }

    container:
      image: ghcr.io/benjaminkern/ci-images/${{ matrix.job.os  }}/${{ matrix.job.variant }}:main
      credentials:
         username: ${{ github.actor }}
         password: ${{ secrets.github_token }}

    steps:
      - uses: actions/checkout@v4
      - name: Build lldb.tar.gz
        shell: bash
        run: |
          if [[ ${{ matrix.job.variant }} = 20.04 ]]
          then
            bazelisk build -c opt --config=ci --config=focal //pkg:lldb_pkg
          else
            bazelisk build -c opt --config=ci //pkg:lldb_pkg
          fi
      - name: Copy to workspace
        run: cp bazel-bin/pkg/lldb_pkg.tar.gz lldb-${{ matrix.job.suffix }}.tar.gz
      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: artifact-lldb-${{ matrix.job.suffix }}
          path: lldb-${{ matrix.job.suffix }}.tar.gz

  build:
    runs-on: ${{ matrix.job.os }}
    strategy:
      matrix:
        job:
          - { suffix: x86_64-macos , os: macos-13 }
          - { suffix: aarch64-macos , os: macos-14 }

    steps:
      - uses: actions/checkout@v4
      - name: Build lldb.tar.gz
        run: bazelisk build -c opt --config=ci //pkg:lldb_pkg
      - name: Copy to workspace
        run: cp bazel-bin/pkg/lldb_pkg.tar.gz lldb-${{ matrix.job.suffix }}.tar.gz
      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: artifact-lldb-${{ matrix.job.suffix }}
          path: lldb-${{ matrix.job.suffix }}.tar.gz
